
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  messageCount: 'messageCount'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  role: 'role',
  content: 'content',
  audioUrl: 'audioUrl',
  ssmlUsed: 'ssmlUsed',
  timestamp: 'timestamp',
  metrics: 'metrics'
};

exports.Prisma.ApiKeyScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  openai: 'openai',
  elevenlabs: 'elevenlabs',
  gemini: 'gemini',
  anthropic: 'anthropic',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VoiceConfigScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  voiceId: 'voiceId',
  model: 'model',
  ssmlEnabled: 'ssmlEnabled',
  ssmlModel: 'ssmlModel',
  prosodyEnabled: 'prosodyEnabled',
  emphasisEnabled: 'emphasisEnabled',
  phonemesEnabled: 'phonemesEnabled',
  formality: 'formality',
  maxBreaksPer100Words: 'maxBreaksPer100Words',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClaudeConfigScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  systemPromptTemplate: 'systemPromptTemplate',
  voiceEnabled: 'voiceEnabled',
  voiceDirectives: 'voiceDirectives',
  model: 'model',
  maxTurns: 'maxTurns',
  permissionMode: 'permissionMode',
  allowedTools: 'allowedTools',
  disallowedTools: 'disallowedTools',
  mcpServers: 'mcpServers',
  customInstructions: 'customInstructions',
  templateVars: 'templateVars',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  inputDeviceId: 'inputDeviceId',
  sampleRate: 'sampleRate',
  noiseSuppressionEnabled: 'noiseSuppressionEnabled',
  vadThreshold: 'vadThreshold',
  minSilenceMs: 'minSilenceMs',
  maxUtteranceMs: 'maxUtteranceMs',
  minSpeechMs: 'minSpeechMs',
  trimLongSilences: 'trimLongSilences',
  maxChunkLengthMs: 'maxChunkLengthMs',
  sttProvider: 'sttProvider',
  sttModel: 'sttModel',
  sttLocale: 'sttLocale',
  sttEncoding: 'sttEncoding',
  sendPartials: 'sendPartials',
  ttsProvider: 'ttsProvider',
  ttsVoiceId: 'ttsVoiceId',
  ttsModel: 'ttsModel',
  ttsStreamPlayback: 'ttsStreamPlayback',
  ttsAutoplay: 'ttsAutoplay',
  ssmlEnabled: 'ssmlEnabled',
  ssmlModel: 'ssmlModel',
  ssmlEnableProsody: 'ssmlEnableProsody',
  ssmlEnableEmphasis: 'ssmlEnableEmphasis',
  ssmlEnablePhonemes: 'ssmlEnablePhonemes',
  ssmlFormality: 'ssmlFormality',
  ssmlMaxBreaksPer100Words: 'ssmlMaxBreaksPer100Words',
  defaultMode: 'defaultMode',
  autoSendInAutoMode: 'autoSendInAutoMode',
  pttKeybinding: 'pttKeybinding',
  keepConversationHistory: 'keepConversationHistory',
  retentionDays: 'retentionDays',
  loggingLevel: 'loggingLevel',
  metricsEnabled: 'metricsEnabled',
  backendUrl: 'backendUrl',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectContextScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  projectPath: 'projectPath',
  projectName: 'projectName',
  claudeMdPath: 'claudeMdPath',
  devCommand: 'devCommand',
  buildCommand: 'buildCommand',
  testCommand: 'testCommand',
  stopCommand: 'stopCommand',
  settings: 'settings',
  createdAt: 'createdAt',
  lastAccessedAt: 'lastAccessedAt'
};

exports.Prisma.TodoScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  projectPath: 'projectPath',
  title: 'title',
  description: 'description',
  status: 'status',
  priority: 'priority',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt',
  archivedAt: 'archivedAt',
  blockedReason: 'blockedReason',
  assignee: 'assignee',
  metadata: 'metadata'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TodoStatus = exports.$Enums.TodoStatus = {
  BACKLOG: 'BACKLOG',
  IN_PROGRESS: 'IN_PROGRESS',
  BLOCKED: 'BLOCKED',
  COMPLETED: 'COMPLETED',
  ARCHIVED: 'ARCHIVED'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.Prisma.ModelName = {
  Project: 'Project',
  Conversation: 'Conversation',
  Message: 'Message',
  ApiKey: 'ApiKey',
  VoiceConfig: 'VoiceConfig',
  ClaudeConfig: 'ClaudeConfig',
  Settings: 'Settings',
  ProjectContext: 'ProjectContext',
  Todo: 'Todo'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/codingbutter/GitHub/speak2me-mcp/packages/database/src/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/codingbutter/GitHub/speak2me-mcp/packages/database/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma schema for STT MCP\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/client\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Projects - top level organizational unit\nmodel Project {\n  id          String   @id @default(uuid())\n  name        String\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  conversations Conversation[]\n\n  @@index([createdAt])\n}\n\n// Conversations\nmodel Conversation {\n  id           String   @id @default(uuid())\n  projectId    String?\n  name         String?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n  messageCount Int      @default(0)\n\n  // Relations\n  project        Project?        @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  messages       Message[]\n  apiKeys        ApiKey?\n  voiceConfig    VoiceConfig?\n  projectContext ProjectContext?\n  claudeConfig   ClaudeConfig?\n\n  @@index([projectId, createdAt])\n  @@index([createdAt])\n}\n\n// Messages in conversations\nmodel Message {\n  id             String   @id @default(uuid())\n  conversationId String\n  role           String // \"user\" | \"assistant\"\n  content        String\n  audioUrl       String?\n  ssmlUsed       String?\n  timestamp      DateTime @default(now())\n\n  // Metrics (stored as JSON)\n  metrics String? // JSON string of metrics object\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n\n  @@index([conversationId, timestamp])\n}\n\n// API Keys per conversation\nmodel ApiKey {\n  id             String   @id @default(uuid())\n  conversationId String   @unique\n  openai         String?\n  elevenlabs     String?\n  gemini         String?\n  anthropic      String?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n}\n\n// Voice configuration per conversation\nmodel VoiceConfig {\n  id             String @id @default(uuid())\n  conversationId String @unique\n\n  // TTS Settings\n  voiceId String?\n  model   String  @default(\"eleven_flash_v2\")\n\n  // SSML Settings\n  ssmlEnabled          Boolean @default(true)\n  ssmlModel            String  @default(\"gpt-4o-mini\")\n  prosodyEnabled       Boolean @default(true)\n  emphasisEnabled      Boolean @default(true)\n  phonemesEnabled      Boolean @default(false)\n  formality            String  @default(\"neutral\") // \"casual\" | \"neutral\" | \"formal\"\n  maxBreaksPer100Words Int     @default(3)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n}\n\n// Claude Agent Configuration per conversation\nmodel ClaudeConfig {\n  id             String @id @default(uuid())\n  conversationId String @unique\n\n  // System Prompt Template (with {{variables}})\n  systemPromptTemplate String? @default(\"You are Claude, a helpful AI assistant with voice capabilities. When responding, ALWAYS use SSML (Speech Synthesis Markup Language) tags to enhance the expressiveness and naturalness of your speech output. Use tags like <break>, <emphasis>, <prosody>, and <say-as> to make your responses more engaging and human-like. {{voiceDirectives}}\")\n\n  // Voice Chat Directives\n  voiceEnabled    Boolean @default(false)\n  voiceDirectives String? // Instructions about voice capabilities\n\n  // Claude Agent SDK Options\n  model          String @default(\"claude-sonnet-4-5-20250929\")\n  maxTurns       Int    @default(10)\n  permissionMode String @default(\"acceptEdits\") // acceptEdits, default, bypassPermissions, plan\n\n  // Tool Configuration\n  allowedTools    String? // JSON array of tool names\n  disallowedTools String? // JSON array of tool names to exclude\n\n  // MCP Server Configuration\n  mcpServers String? // JSON object of MCP server configs\n\n  // Custom Instructions\n  customInstructions String? // Additional context/instructions\n\n  // Template Variables (user-defined replacements)\n  templateVars String? // JSON object of variable replacements\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n}\n\n// Global Settings (single row)\nmodel Settings {\n  id Int @id @default(1)\n\n  // Audio Capture\n  inputDeviceId           String?\n  sampleRate              Int     @default(48000)\n  noiseSuppressionEnabled Boolean @default(true)\n\n  // VAD & Chunking\n  vadThreshold     Float   @default(0.5)\n  minSilenceMs     Int     @default(500)\n  maxUtteranceMs   Int     @default(15000)\n  minSpeechMs      Int     @default(200)\n  trimLongSilences Boolean @default(true)\n  maxChunkLengthMs Int     @default(20000)\n\n  // STT\n  sttProvider  String  @default(\"gemini\")\n  sttModel     String  @default(\"gemini-1.5-flash\")\n  sttLocale    String  @default(\"en-US\")\n  sttEncoding  String  @default(\"webm\")\n  sendPartials Boolean @default(false)\n\n  // TTS (defaults)\n  ttsProvider       String  @default(\"elevenlabs\")\n  ttsVoiceId        String? // Default voice\n  ttsModel          String  @default(\"eleven_flash_v2\")\n  ttsStreamPlayback Boolean @default(true)\n  ttsAutoplay       Boolean @default(true)\n\n  // SSML Enhancer (defaults)\n  ssmlEnabled              Boolean @default(true)\n  ssmlModel                String  @default(\"gpt-4o-mini\")\n  ssmlEnableProsody        Boolean @default(true)\n  ssmlEnableEmphasis       Boolean @default(true)\n  ssmlEnablePhonemes       Boolean @default(false)\n  ssmlFormality            String  @default(\"neutral\")\n  ssmlMaxBreaksPer100Words Int     @default(3)\n\n  // Interaction\n  defaultMode        String  @default(\"manual\")\n  autoSendInAutoMode Boolean @default(true)\n  pttKeybinding      String  @default(\"Space\")\n\n  // Privacy & Storage\n  keepConversationHistory Boolean @default(true)\n  retentionDays           Int     @default(30)\n\n  // Advanced\n  loggingLevel   String  @default(\"info\")\n  metricsEnabled Boolean @default(true)\n  backendUrl     String  @default(\"http://localhost:3000\")\n\n  updatedAt DateTime @updatedAt\n}\n\n// Project Context - Links conversations to project directories\nmodel ProjectContext {\n  id             String  @id @default(uuid())\n  conversationId String  @unique\n  projectPath    String\n  projectName    String\n  claudeMdPath   String?\n\n  // Project commands\n  devCommand   String? // Command to start dev server (e.g., \"bun run dev\")\n  buildCommand String? // Command to build project (e.g., \"bun run build\")\n  testCommand  String? // Command to run tests (e.g., \"bun test\")\n  stopCommand  String? // Command to stop dev server (optional)\n\n  // Settings stored as JSON (project-specific VAD, voice preferences, etc.)\n  settings String? // JSON string\n\n  createdAt      DateTime @default(now())\n  lastAccessedAt DateTime @updatedAt\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n\n  @@index([projectPath])\n}\n\n// TODO System - Task management\nmodel Todo {\n  id             String  @id @default(uuid())\n  conversationId String\n  projectPath    String?\n\n  title       String\n  description String?\n  status      TodoStatus @default(BACKLOG)\n  priority    Priority?\n\n  // Tags stored as JSON array\n  tags String? // JSON string array\n\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  completedAt DateTime?\n  archivedAt  DateTime?\n\n  blockedReason String?\n  assignee      String?\n\n  // Metadata stored as JSON (custom fields, time tracking, etc.)\n  metadata String? // JSON string\n\n  @@index([conversationId, status])\n  @@index([projectPath, status])\n}\n\n// Enums\nenum TodoStatus {\n  BACKLOG\n  IN_PROGRESS\n  BLOCKED\n  COMPLETED\n  ARCHIVED\n}\n\nenum Priority {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n",
  "inlineSchemaHash": "52fb46ba9fe3f4d02a35c156e9118bf30f34915eb15abf8d835fdcc1bdcdf7aa",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToProject\"}],\"dbName\":null},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ConversationToProject\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToConversation\"},{\"name\":\"voiceConfig\",\"kind\":\"object\",\"type\":\"VoiceConfig\",\"relationName\":\"ConversationToVoiceConfig\"},{\"name\":\"projectContext\",\"kind\":\"object\",\"type\":\"ProjectContext\",\"relationName\":\"ConversationToProjectContext\"},{\"name\":\"claudeConfig\",\"kind\":\"object\",\"type\":\"ClaudeConfig\",\"relationName\":\"ClaudeConfigToConversation\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssmlUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metrics\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":null},\"ApiKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openai\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"elevenlabs\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gemini\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"anthropic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ApiKeyToConversation\"}],\"dbName\":null},\"VoiceConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssmlEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ssmlModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prosodyEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emphasisEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phonemesEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"formality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxBreaksPer100Words\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToVoiceConfig\"}],\"dbName\":null},\"ClaudeConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"systemPromptTemplate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voiceEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"voiceDirectives\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxTurns\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"permissionMode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allowedTools\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"disallowedTools\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mcpServers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customInstructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateVars\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ClaudeConfigToConversation\"}],\"dbName\":null},\"Settings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inputDeviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sampleRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"noiseSuppressionEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"vadThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"minSilenceMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxUtteranceMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minSpeechMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trimLongSilences\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maxChunkLengthMs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sttProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sttModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sttLocale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sttEncoding\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sendPartials\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ttsProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ttsVoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ttsModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ttsStreamPlayback\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ttsAutoplay\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ssmlEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ssmlModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssmlEnableProsody\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ssmlEnableEmphasis\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ssmlEnablePhonemes\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ssmlFormality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ssmlMaxBreaksPer100Words\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defaultMode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"autoSendInAutoMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pttKeybinding\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keepConversationHistory\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"retentionDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loggingLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metricsEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"backendUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProjectContext\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"claudeMdPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"devCommand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buildCommand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testCommand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stopCommand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastAccessedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToProjectContext\"}],\"dbName\":null},\"Todo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TodoStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"blockedReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignee\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

